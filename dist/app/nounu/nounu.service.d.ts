import { Repository } from 'typeorm';
import { Nounus } from './models/nounu.model';
import { NounuSettings } from './models/nounu_setting.model';
import { CreateNounuDto } from './dto/create-nounu.dto';
import { UpdateNounuDto } from './dto/update-nounu.dto';
import { SettingLanguages } from '../setting/models/setting_language.model';
import { NounuSettingLanguages } from './models/nounu_setting_languages.model';
import { NounuSettingLocalizations } from './models/nounu_setting_localization.model';
import { NounuSettingAgeOfChildrens } from './models/nounu_setting_age_of_children.model';
import { NounuSettingCertifications } from './models/nounu_setting_certification.model';
import { NounuSettingDeriredTimes } from './models/nounu_setting_desired_time.model';
import { NounuSettingAreaWork } from './models/nounu_settring_area_work.model';
import { SettingAgeOfChildren } from '../setting/models/setting_age_of_children.model';
import { SettingLocalization } from '../setting/models/setting_localization.model';
import { SettingCertifications } from '../setting/models/setting_certification.model';
import { User } from '../user/user.model';
import { SettingDesiredTime } from '../setting/models/setting_desired_time.model';
import { SettingSpecificSkills } from '../setting/models/setting_specific_skill.model';
import { NounuSettingSpecificSkills } from './models/nounu_settring_specific_skill.model';
export declare class NounuService {
    private readonly nounuRepository;
    private readonly nounuSettingsRepository;
    private readonly nounuSettingLanguagesRepository;
    private readonly settingLanguagesRepository;
    private readonly nounuSettingLocalizationsRepository;
    private readonly nounuSettingAgeOfChildrensRepository;
    private readonly nounuSettingCertificationsRepository;
    private readonly nounuSettingDesiredTimesRepository;
    private readonly nounuSettingAreaWorksRepository;
    private readonly settingAgeOfChildrensRepository;
    private readonly settingLocalizationsRepository;
    private readonly settingDesiredTimesRepository;
    private readonly settingCertificationsRepository;
    private readonly settingSpecificSkillsRepository;
    private readonly nounuSettingSpecificSkillsRepository;
    private readonly userRepository;
    constructor(nounuRepository: Repository<Nounus>, nounuSettingsRepository: Repository<NounuSettings>, nounuSettingLanguagesRepository: Repository<NounuSettingLanguages>, settingLanguagesRepository: Repository<SettingLanguages>, nounuSettingLocalizationsRepository: Repository<NounuSettingLocalizations>, nounuSettingAgeOfChildrensRepository: Repository<NounuSettingAgeOfChildrens>, nounuSettingCertificationsRepository: Repository<NounuSettingCertifications>, nounuSettingDesiredTimesRepository: Repository<NounuSettingDeriredTimes>, nounuSettingAreaWorksRepository: Repository<NounuSettingAreaWork>, settingAgeOfChildrensRepository: Repository<SettingAgeOfChildren>, settingLocalizationsRepository: Repository<SettingLocalization>, settingDesiredTimesRepository: Repository<SettingDesiredTime>, settingCertificationsRepository: Repository<SettingCertifications>, settingSpecificSkillsRepository: Repository<SettingSpecificSkills>, nounuSettingSpecificSkillsRepository: Repository<NounuSettingSpecificSkills>, userRepository: Repository<User>);
    create(createNounuDto: CreateNounuDto, files: Array<Express.Multer.File>): Promise<Nounus>;
    findAll(): Promise<Nounus[]>;
    findOne(id: string): Promise<Nounus>;
    update(id: string, updateNounuDto: UpdateNounuDto): Promise<Nounus>;
    remove(id: string): Promise<void>;
}
