import { Repository } from 'typeorm';
import { Roles } from '../role/models/role.model';
import { TypeParameter } from '../parameter/models/parameter_type.model';
import { Parameter } from '../parameter/models/parameter.model';
import { Abonnements } from '../abonnement/models/abonnement.model';
import { Notification } from '../notification/models/notification.model';
export declare class SettingController {
    private readonly roles;
    private readonly typeParameterRepository;
    private readonly parameterRepository;
    private readonly settingSubscriptionTypes;
    private readonly notificationRepository;
    constructor(roles: Repository<Roles>, typeParameterRepository: Repository<TypeParameter>, parameterRepository: Repository<Parameter>, settingSubscriptionTypes: Repository<Abonnements>, notificationRepository: Repository<Notification>);
    private VerifyInParameter;
    private addAllTypeParametres;
    private addAllParametres;
    SeederParametreTypes(): Promise<any>;
    SeederAgeOfChildren(): Promise<any>;
    SeederSpecificNeed(): Promise<any>;
    SeederGuardSchedule(): Promise<any>;
    SeederHousekeeper(): Promise<any>;
    SeederServiceFrequency(): Promise<any>;
    SeederDesiredTimes(): Promise<any>;
    SeederSpecificSkills(): Promise<any>;
    SeederLanguages(): Promise<any>;
    SeederLocalization(): Promise<any>;
    SeederPaymentTerms(): Promise<any>;
    SeederCertifications(): Promise<any>;
    SeederRoles(): Promise<any>;
    SeederTypeProfil(): Promise<any>;
    SeederDisponibilityOfPrestataire(): Promise<any>;
    SeederTypeMedia(): Promise<any>;
    SeederCleaningSupplies(): Promise<any>;
    SeederTasks(): Promise<any>;
    SeederCandidateCriteria(): Promise<any>;
    SeederTypeDeServices(): Promise<any>;
    RemoveDoublonAbonnements(): Promise<void>;
    RemoveDoublonNotifications(): Promise<void>;
}
